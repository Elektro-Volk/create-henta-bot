class PhoneCommand {
    constructor(henta) {
        this.name = "—Ç–µ–ª–µ—Ñ–æ–Ω";
        this.aliases = [ '–º–æ–±–∏–ª—å–Ω–∏–∫', '—Ñ–∞–≥–∞' ];
        this.description = "—Ç–µ–ª–µ—Ñ–æ–Ω —Å –ø–æ–∏—Å–∫–æ–º";
        this.type = "main";
        this.subcommands = {
            ['–ø–æ–∏—Å–∫']: { handler: this.searchHandler.bind(this), arguments: { q: { name: "—Ç–µ–∫—Å—Ç", type: "string" } } },
            ['–ø–æ–µ–∑–¥']: { handler: this.trainHandler.bind(this) },
            ['—à–∏–ø–∫–∞']: { handler: this.throwErrorHandler.bind(this) }
        };
        this.emoji = 'üì±';

        this.words = [
            '–±—è–∫–∏', '–º–∞–∫–∞–∫–∏', '–º–∞—à–∏–Ω–∫–∏', '–∫–∞—Ä—Ç–∏–Ω–∫–∏', '–∏—Ä–∏–Ω–∫–∏', '–º–∞–Ω–¥–∞—Ä–∏–Ω–∫–∏', '–º–∞–∫—Å'
        ]
    }

    trainHandler(ctx) {
        ctx.answer(`üöÇüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉüöÉ`);
    }

    throwErrorHandler(ctx) {
        ctx.etogotutnet(`HA-HA-HA`);
    }

    searchHandler(ctx) {
        console.log(ctx.params.q)
        ctx.answer([
            `üì± –í—ã –Ω–∞—à–ª–∏: ${this.words.filter(i => i.includes(ctx.params.q)).join(', ')}`,
            `\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ '—Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–µ–∑–¥' :)`
        ], { sendName: false });
    }

    handler(ctx) {
        ctx.answer([
            `üì± –£ –≤–∞—Å –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –µ—Å—Ç—å: ${this.words.join(', ')}`,
            `\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ '—Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–∏—Å–∫ <—Ç–µ–∫—Å—Ç>' :)`
        ], { sendName: false });
    }
}

module.exports = PhoneCommand;
